name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - k8s-manifest/**
      - README.md
      - terraform/**
      - kustomize/**
  pull_request:
    branches: [main]

jobs:
  sast_scan:
    name: SAST scan 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
     
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
    
    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      run: bandit -ll -ii -r app/ -f json -o bandit-report.json || true

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-findings
        path: bandit-report.json

  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: sast_scan  # Ensure SAST scan runs first

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3 
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest ./app
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
        format: 'table'
        exit-code: '0'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
        output: trivy.json
        color: 'always'
    
    - name: Upload Trivy Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-report
        path: trivy.json

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  deploy_to_k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build_and_push  # Ensure build and push runs first

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        aws-region: ap-south-1
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GitHubActionsSession

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ap-south-1 --name myapp-cluster
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s-manifest/deployment.yaml
        kubectl apply -f k8s-manifest/service.yaml
